# -*- mode: sh -*-

function prompt()
{
    git status > /dev/null 2>&1
    if [ $? -eq 0 ] ; then
	BRANCH=`git rev-parse --abbrev-ref HEAD`
	BRANCH_BASENAME=`basename $BRANCH`
	echo -e '\033]2;'${BRANCH}'\007'
    else
	printf "\033]0;%s@%s:%s\007" "${USER}" "${HOSTNAME%%.*}" "${PWD/#$HOME/~}"
    fi
}

function tempo_log()
{
    LOG=~/.tempo.log
    JIRA="NONE"
    git status > /dev/null 2>&1
    if [ $? -eq 0 ] ; then
        JIRA=`/bin/git rev-parse --abbrev-ref HEAD | cut -d\/ -f2 | cut -d\- -f1-2`
    fi
    TIMESTAMP=`date '+%Y%m%d %H:%M:%S'`
    HOSTNAME=`hostname -s`
    echo "${TIMESTAMP}|${HOSTNAME}|${JIRA}|${1}" >> $LOG
}

function make()
{
    tempo_log "make"
    /bin/make "$@"
}

function setsdk()
{
    VERSION=$1
    SELECTED_COUNT=`ls -ald $TBRICKS/*sdk-*$VERSION-* | wc -l`
    if [ -z "$SELECTED_COUNT" ]; then
        echo "No sdk version: $VERSION"
        return
    elif [ $SELECTED_COUNT != "1" ]; then
        echo "$VERSION is ambiguous when selecting sdk"
        return
    else
        export SDK=`eval echo "$TBRICKS/*sdk-*$VERSION-*"`
        if [ -L $TBRICKS/sdk ] ; then
            rm -f $TBRICKS/sdk
            ln -s $SDK $TBRICKS/sdk
        fi
        rm -rf $TB_APPS/.ccls-cache
#        find $TB_APPS -name compile_commands.json -exec rm '{}' \;
        recompute_manpath
        echo "SDK is $SDK"
    fi
}

function bearapp()
{
    BEAR=`which bear`
    NPROC=`nproc`
    touch .ccls
    make clean
    rm -rf .ccls-cache
    name $BEAR make -j$NPROC RECURSIVE=YES
}

function makedb()
{
    cat > .ccls <<EOF
${LLVM}/bin/clang++
%h -x
%h c++-header
-isystem${SDK}/include64
-I${TB_APPS}
-DLINUX
-DLINUX64
-DU_USING_ICU_NAMESPACE=0
-DLUA_LIB=\"tbricks_lua\"
-DLUAJIT_LIB=\"luajit\"
-DTB_USE_RCU
-DURCU_INLINE_SMALL_FUNCTIONS
-DFMT_SHARED
-DNDEBUG
-D_POSIX_PTHREAD_SEMANTICS
-fPIC
-D_GNU_SOURCE
-D_GLIBCXX_USE_CXX11_ABI=0
-m64
--gcc-toolchain=/opt/gcc-8.2.0
-flto=full
-fclang-abi-compat=6.0
-std=gnu++17
-D_GLIBCXX_DEPRECATED=
-pipe
-pthread
-march=core2
-mtune=corei7
-Qunused-arguments
EOF
}

function recompute_manpath()
{
    MANPATH=/usr/share/man:/usr/local/share/man:/usr/share/locale/man:
    MANPATH+=$LLVM/share/man:$GCC_SUITE/share/man:
    MANPATH+=$ADMIN_ROOT/doc/man:$SDK/doc/man:$SDK/doc/libraries/strategy/man
    export MANPATH
}

export PROMPT_COMMAND=prompt
export PS1='\[\e[1;32m\]\h:\W\[\e[m\]$ '

LOCAL_TBSH=$HOME/.local_tbsh
if [ -f $LOCAL_TBSH ] ; then
    source $LOCAL_TBSH
else
    export TBRICKS="/opt/tbricks"
    export TBRICKS_ADMIN_CENTER=john.mcmullan_system
    export TBRICKS_ROOT=$TBRICKS
    export ADMIN_ROOT="$TBRICKS/admin"
    export SDK=$TBRICKS/sdk
fi

# clang++
LLVM="/opt/llvm-10"
# g++
GCC_SUITE="/opt/gcc-8.2.0"
export GCC_SUITE LLVM

recompute_manpath

if [ -f ${ADMIN_ROOT}/etc/bash/.tbricks_completion.bash ] ; then
    source $ADMIN_ROOT/etc/bash/.tbricks_completion.bash
fi

export TB_APPS=$HOME/work/apps
export MK_SRCROOT=$HOME/work/apps
export MAKE=gmake
